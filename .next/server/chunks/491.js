"use strict";exports.id=491,exports.ids=[491],exports.modules={1491:(e,t,a)=>{a.d(t,{offchainLookup:()=>$,offchainLookupSignature:()=>S});var r=a(1322),s=a(7779),n=a(7471),o=a(7149);class i extends n.G{constructor({callbackSelector:e,cause:t,data:a,extraData:r,sender:s,urls:n}){super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],t.metaMessages?.length?"":[],"Offchain Gateway Call:",n&&["  Gateway URL(s):",...n.map(e=>`    ${(0,o.G)(e)}`)],`  Sender: ${s}`,`  Data: ${a}`,`  Callback selector: ${e}`,`  Extra data: ${r}`].flat(),name:"OffchainLookupError"})}}class c extends n.G{constructor({result:e,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,o.G)(t)}`,`Response: ${(0,s.P)(e)}`],name:"OffchainLookupResponseMalformedError"})}}class u extends n.G{constructor({sender:e,to:t}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${e}`],name:"OffchainLookupSenderMismatchError"})}}var d=a(7422),f=a(771),l=a(4770),p=a(1659),h=a(9728),w=a(3385),m=a(6071),y=a(1649),g=a(5969),b=a(9254),x=a(1979),E=a(3116),M=a(9280),L=a(2488),P=a(9328);let k="/docs/contract/encodeErrorResult";function G(e){let{abi:t,errorName:a,args:r}=e,s=t[0];if(a){let e=(0,P.mE)({abi:t,args:r,name:a});if(!e)throw new b.MS(a,{docsPath:k});s=e}if("error"!==s.type)throw new b.MS(void 0,{docsPath:k});let n=(0,L.t)(s),o=(0,E.C)(n),i="0x";if(r&&r.length>0){if(!s.inputs)throw new b.Zh(s.name,{docsPath:k});i=(0,l.E)(s.inputs,r)}return(0,w.SM)([o,i])}let O="/docs/contract/encodeFunctionResult",R="x-batch-gateway:true";async function C(e){let{data:t,ccipRequest:a}=e,{args:[r]}=function(e){let{abi:t,data:a}=e,r=(0,x.tP)(a,0,4),s=t.find(e=>"function"===e.type&&r===(0,E.C)((0,L.t)(e)));if(!s)throw new b.eF(r,{docsPath:"/docs/contract/decodeFunctionData"});return{functionName:s.name,args:"inputs"in s&&s.inputs&&s.inputs.length>0?(0,M.r)(s.inputs,(0,x.tP)(a,4)):void 0}}({abi:y.Yi,data:t}),s=[],n=[];return await Promise.all(r.map(async(e,t)=>{try{n[t]=e.urls.includes(R)?await C({data:e.data,ccipRequest:a}):await a(e),s[t]=!1}catch(e){s[t]=!0,n[t]="HttpRequestError"===e.name&&e.status?G({abi:y.Yi,errorName:"HttpError",args:[e.status,e.shortMessage]}):G({abi:[g.Up],errorName:"Error",args:["shortMessage"in e?e.shortMessage:e.message]})}})),function(e){let{abi:t,functionName:a,result:r}=e,s=t[0];if(a){let e=(0,P.mE)({abi:t,name:a});if(!e)throw new b.xL(a,{docsPath:O});s=e}if("function"!==s.type)throw new b.xL(void 0,{docsPath:O});if(!s.outputs)throw new b.MX(s.name,{docsPath:O});let n=(()=>{if(0===s.outputs.length)return[];if(1===s.outputs.length)return[r];if(Array.isArray(r))return r;throw new b.hn(r)})();return(0,l.E)(s.outputs,n)}({abi:y.Yi,functionName:"query",result:[s,n]})}let S="0x556f1830",v={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function $(e,{blockNumber:t,blockTag:a,data:s,to:n}){let{args:o}=(0,f.p)({data:s,abi:[v]}),[c,d,m,y,g]=o,{ccipRead:b}=e,x=b&&"function"==typeof b?.request?b.request:T;try{if(!function(e,t){if(!(0,h.U)(e,{strict:!1}))throw new p.b({address:e});if(!(0,h.U)(t,{strict:!1}))throw new p.b({address:t});return e.toLowerCase()===t.toLowerCase()}(n,c))throw new u({sender:c,to:n});let s=d.includes(R)?await C({data:m,ccipRequest:x}):await x({data:m,sender:c,urls:d}),{data:o}=await (0,r.R)(e,{blockNumber:t,blockTag:a,data:(0,w.zo)([y,(0,l.E)([{type:"bytes"},{type:"bytes"}],[s,g])]),to:n});return o}catch(e){throw new i({callbackSelector:y,cause:e,data:s,extraData:g,sender:c,urls:d})}}async function T({data:e,sender:t,urls:a}){let r=Error("An unknown error occurred.");for(let n=0;n<a.length;n++){let o=a[n],i=o.includes("{data}")?"GET":"POST",u="POST"===i?{data:e,sender:t}:void 0,f="POST"===i?{"Content-Type":"application/json"}:{};try{let a;let n=await fetch(o.replace("{sender}",t.toLowerCase()).replace("{data}",e),{body:JSON.stringify(u),headers:f,method:i});if(a=n.headers.get("Content-Type")?.startsWith("application/json")?(await n.json()).data:await n.text(),!n.ok){r=new d.Gg({body:u,details:a?.error?(0,s.P)(a.error):n.statusText,headers:n.headers,status:n.status,url:o});continue}if(!(0,m.v)(a)){r=new c({result:a,url:o});continue}return a}catch(e){r=new d.Gg({body:u,details:e.message,url:o})}}throw r}}};